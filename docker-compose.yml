version: '3'

services:
  app:
    build: .
    command: /bin/sh -c ("python scheduler/manage.py makemigrations && python scheduler/manage.py migrate && python scheduler/manage.py runserver 0.0.0.0:8000")
    environment:
      - MONGO_INITDB_DATABASE:${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME:${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD:${MONGO_INITDB_ROOT_PASSWORD}
      - MONGODB_HOST:${MONGODB_HOST}
      - MONGODB_ENGINE:${MONGODB_ENGINE}
      - MONGODB_ENFORCE_SCHEMA:${MONGODB_ENFORCE_SCHEMA}
      - SECRET_KEY:${SECRET_KEY}
    env_file:
      - .env
    image: scheduler
    ports:
      - "8000:8000"
    depends_on: 
      - mongo
    restart: on-failure
    volumes:
      - ./:/scheduler
    networks:
      - backend
      
  mongo:
    image: mongo:4.0.8
    restart: unless-stopped
    ports:
        - 27017:27017
    environment:
        - MONGO_INITDB_ROOT_USERNAME:${MONGO_INITDB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD:${MONGO_INITDB_ROOT_PASSWORD}
        - MONGO_INITDB_DATABASE:${MONGO_INITDB_DATABASE}
    volumes:
      - /data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    networks:
      - backend
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: batman
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret123
    networks:
      - backend

networks:
  backend:
