version: '3.8'

services:
  app:
    build: .
    command: /bin/sh -c ("python scheduler/manage.py makemigrations && python scheduler/manage.py migrate && python scheduler/manage.py runserver 0.0.0.0:8000")
    environment:
      - Debug=1
      - REDIS_URL=redis://cache
    env_file:
      - .env
    image: scheduler
    ports:
      - "8000:8000"
    depends_on: 
      - postgres
    restart: on-failure
    volumes:
      - ./:/scheduler
    links:
      - redis
      

      
  postgres:
    build: ./database/
    ports:
      - "5432:5432"
    restart: on-failure
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - /var/lib/postgresql/data
    

  adminer:
    image: adminer:4.7.7-standalone
    restart: always
    ports:
      - 8080:8080

  mongodb:
    image : mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass12345
    volumes:
      - mongodb-data:/data/db
    networks:
      - mongodb_network
    ports:
    - 27017:27017
    restart: unless-stopped

  mongo-express:
      image: mongo-express
      container_name: mongo-express
      environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass12345
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
      volumes:
      - mongodb-data
      depends_on:
      - mongodb
      networks:
      - mongodb_network
      ports:
      - 8081:8081

  redis:
    image: redis
    container_name: cache
    expose:
      - 6379

  

volumes:
  mongodb-data:

networks:
  mongodb_network:
  


